(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{553:function(_,v,n){"use strict";n.r(v);var t=n(46),e=Object(t.a)({},(function(){var _=this,v=_.$createElement,n=_._self._c||v;return n("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[n("h1",{attrs:{id:"npm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[_._v("#")]),_._v(" npm")]),_._v(" "),n("h2",{attrs:{id:"介绍下-npm-模块安装机制-为什么输入-npm-install-就可以自动安装对应的模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍下-npm-模块安装机制-为什么输入-npm-install-就可以自动安装对应的模块"}},[_._v("#")]),_._v(" 介绍下 npm 模块安装机制，为什么输入 npm install 就可以自动安装对应的模块？")]),_._v(" "),n("h3",{attrs:{id:"npm-模块安装机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-模块安装机制"}},[_._v("#")]),_._v(" npm 模块安装机制：")]),_._v(" "),n("ul",[n("li",[_._v("发出"),n("code",[_._v("npm install")]),_._v("命令")]),_._v(" "),n("li",[_._v("查询node_modules目录之中是否已经存在指定模块\n"),n("ul",[n("li",[_._v("若存在，不再重新安装")]),_._v(" "),n("li",[_._v("若不存在\n"),n("ul",[n("li",[_._v("npm 向 registry 查询模块压缩包的网址")]),_._v(" "),n("li",[_._v("下载压缩包，存放在根目录下的"),n("code",[_._v(".npm")]),_._v("目录里")]),_._v(" "),n("li",[_._v("解压压缩包到当前项目的"),n("code",[_._v("node_modules")]),_._v("目录")])])])])])]),_._v(" "),n("h3",{attrs:{id:"npm-实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-实现原理"}},[_._v("#")]),_._v(" npm 实现原理")]),_._v(" "),n("ol",[n("li",[n("p",[n("strong",[_._v("执行工程自身 "),n("code",[_._v("preinstall")])])]),_._v(" "),n("p",[_._v("生命周期 "),n("code",[_._v("preinstall")]),_._v(" 会被先执行。")])]),_._v(" "),n("li",[n("p",[n("strong",[_._v("确定首层依赖模块")])]),_._v(" "),n("p",[_._v("是指该项目写在 "),n("code",[_._v("package.json")]),_._v(" 的："),n("code",[_._v("dependencies")]),_._v("、 "),n("code",[_._v("devDependencies")]),_._v(" 上的依赖。")])]),_._v(" "),n("li",[n("p",[n("strong",[_._v("获取模块")])]),_._v(" "),n("p",[_._v("递归获取依赖的依赖。")])]),_._v(" "),n("li",[n("p",[n("strong",[_._v("模块扁平化（dedupe）")])]),_._v(" "),n("p",[_._v("拍平依赖，并处理兼容问题，使用兼容版本。若两个版本互不兼容则同时保留两个版本在 "),n("code",[_._v("node_modules")]),_._v("。")])]),_._v(" "),n("li",[n("p",[n("strong",[_._v("安装模块")])]),_._v(" "),n("p",[_._v("开始安装，并按照 "),n("code",[_._v("preinstall")]),_._v(" 、 "),n("code",[_._v("install")]),_._v(" 、 "),n("code",[_._v("postinstall")]),_._v(" 的顺序执行各模块的生命周期。")])]),_._v(" "),n("li",[n("p",[n("strong",[_._v("执行工程自身生命周期")])]),_._v(" "),n("p",[_._v("当前 npm 工程如果定义了钩子此时会被执行（按照 install、postinstall、prepublish、prepare 的顺序）。")]),_._v(" "),n("p",[_._v("最后一步是生成或更新版本描述文件，npm install 过程完成。")])])])])}),[],!1,null,null,null);v.default=e.exports}}]);